{"name":"revalidator-model","tagline":"simple models using revalidator","body":"# Synopsis\r\n\r\n**revalidator-model** is a simple model library based on [revalidator](https://github.com/flatiron/revalidator).\r\n\r\n[![Build Status](https://travis-ci.org/pluma/revalidator-model.png?branch=master)](https://travis-ci.org/pluma/revalidator-model) [![NPM version](https://badge.fury.io/js/revalidator-model.png)](http://badge.fury.io/js/revalidator-model) [![Dependencies](https://david-dm.org/pluma/revalidator-model.png)](https://david-dm.org/pluma/revalidator-model)\r\n\r\n# Install\r\n\r\n## With NPM\r\n\r\n```sh\r\nnpm install revalidator-model\r\n```\r\n\r\n## From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/revalidator-model.git\r\ncd revalidator-model\r\nnpm install\r\nmake test\r\n```\r\n\r\n# API\r\n\r\n## model(schema:Object):Model\r\n\r\nCreates a `Model` with the given revalidator `schema`.\r\n\r\nIn addition to the properties recognized by `revalidator` (`properties`, `patternProperties`, `additionalProperties`), the `schema` can have the following properties:\r\n\r\n### schema.proto:Object (optional)\r\n\r\nThe `prototype` instances of the `Model` should inherit from. Use this to specify methods you want to have access to on your model's instances.\r\n\r\n### schema.hydrate:Function (optional)\r\n\r\nA [transformation](https://github.com/pluma/transform-object) that will be applied to objects processed by your model's `hydrate` method.\r\n\r\n### schema.dehydrate:Function (optional)\r\n\r\nA [transformation](https://github.com/pluma/transform-object) that will be applied to model instances' `data` when processed by their `dehydrate` method.\r\n\r\n## new Model(data:Object):Instance\r\n\r\nCreates a new instance with the given `data`. Use of the `new` keyword is optional.\r\n\r\nAny properties of the given `data` object that are not recognized will be ignored.\r\n\r\n## Model.hydrate(data:Object):Instance\r\n\r\nSee `schema.hydrate`. Hydrates the object from the given `data` and returns a new `Model` instance.\r\n\r\n## Model#dehydrate():Object\r\n\r\nSee `schema.dehydrate`. Dehydrates the instance's `data` and returns it.\r\n\r\n## Model#validate():Object\r\n\r\nValidates the instance's data using `revalidator`. The result object has two attributes:\r\n\r\n### valid:Boolean\r\n\r\nWhether the instance's data passed validation.\r\n\r\n### errors:Array\r\n\r\nAn array of error messages if the validation failed.\r\n\r\n## Model#schema:Object\r\n\r\nThe `schema` that was passed used to create the `Model` of this instance.\r\n\r\n## Model#data:Object\r\n\r\nThe instance's `data`.\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/revalidator-model/blob/master/UNLICENSE) file.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}